import tkinter as tk
from tkinter import Label, Button, Frame, Entry, messagebox
from PIL import Image, ImageTk
import sqlite3

font_lbl = ('Courier New', 12, 'bold')
window = tk.Tk()
window.iconbitmap(default="../Assets/logo.ico")
window.title("WELCOME")
window.geometry("800x600+350+100")

class Home:
    def __init__(self, window):
        self.window = window
        self.window.resizable(False,False)
        self.welcome()
        conn = sqlite3.connect("RecipeUsers.db")
        cursor = conn.cursor()
        cursor.execute('''CREATE TABLE IF NOT EXISTS users (username TEXT PRIMARY KEY,email TEXT UNIQUE NOT NULL, password NUMBER NOT NULL)''')
        conn.close()

    def welcome(self):
        self.win = Frame(window, width=800, height=600)
        self.win.place(x=0, y=0)
        self.image = Image.open("../assets/welcome.png")
        self.resize_image = self.image.resize((800, 600))
        self.img = ImageTk.PhotoImage(self.resize_image)
        self.label1 = Label(image=self.img)
        self.label1.image = self.img
        self.label1.pack()
        self.label = Label(window, text="REGIONAL RECIPES", font=('Courier New', 20, 'bold'),bg="grey",fg="white",height=1).place(x=280, y=280)
        self.btn = Button(window, text="GET STARTED", font=('Courier New', 15, 'bold'), fg="white",bg="green" ,command=self.signup_login)
        self.btn.place(x=330, y=340)

    def signup_login(self):
        self.label1.destroy()
        self.btn.destroy()
        self.window.title("SIGNUP AND LOGIN")
        self.user_frame = Frame(self.window, width=800, height=600, bg='lightgrey')
        self.user_frame.place(x=0, y=0)
        left_frame = Frame(self.user_frame, width=400, height=600, bg='lightgrey')
        left_frame.pack(side='left')
        right_frame = Frame(self.user_frame, width=400, height=600, bg='lightgrey')
        right_frame.pack(side='right')
        self.suser_logo = Image.open('../assets/signup.jpg')
        self.suser_logo = self.suser_logo.resize((120, 120))
        self.suser_logo = ImageTk.PhotoImage(self.suser_logo)
        self.suser_logo_lbl = Label(left_frame, image=self.suser_logo)
        self.suser_logo_lbl.place(x=150, y=100)
        self.suser_name_lbl = Label(left_frame, text='USER NAME', font=font_lbl, bg='steel blue', fg='white',width=10)
        self.suser_name_lbl.place(x=90, y=250)
        self.suser_name_entry = Entry(left_frame, width=15)
        self.suser_name_entry.place(x=220, y=250)
        self.semail_lbl = Label(left_frame, text='EMAIL', font=font_lbl, bg='steel blue', fg='white',width=10)
        self.semail_lbl.place(x=90, y=290)
        self.semail_entry = Entry(left_frame, width=15)
        self.semail_entry.place(x=220, y=290)
        self.suser_pass_lbl = Label(left_frame, text='PASSWORD', font=font_lbl, bg='steel blue', fg='white',width=10)
        self.suser_pass_lbl.place(x=90, y=330)
        self.suser_pass_entry = Entry(left_frame, width=15, show='*')
        self.suser_pass_entry.place(x=220, y=330)
        self.suser_btn = Button(left_frame, text='SIGNUP', font=font_lbl, command=self.register_user,bg="blue",fg="white")
        self.suser_btn.place(x=180, y=380)
        self.user_logo = Image.open('../assets/login.png')
        self.user_logo = self.user_logo.resize((120, 120))
        self.user_logo = ImageTk.PhotoImage(self.user_logo)
        self.user_logo_lbl = Label(right_frame, image=self.user_logo)
        self.user_logo_lbl.place(x=150, y=100)
        self.user_name_lbl = Label(right_frame, text='USER NAME', font=font_lbl, bg='steel blue', fg='white',width=10)
        self.user_name_lbl.place(x=90, y=250)
        self.user_name_entry = Entry(right_frame, width=15)
        self.user_name_entry.place(x=220, y=250)
        self.user_pass_lbl = Label(right_frame, text='PASSWORD', font=font_lbl, bg='steel blue', fg='white',width=10)
        self.user_pass_lbl.place(x=90, y=290)
        self.user_pass_entry = Entry(right_frame, width=15, show='*')
        self.user_pass_entry.place(x=220, y=290)
        self.user_btn = Button(right_frame, text='LOGIN', font=font_lbl, command=self.verify_login,bg="green",fg="white")
        self.user_btn.place(x=180, y=340)
        back_button = tk.Button(right_frame, text="BACK", font=font_lbl, command=self.welcome,bg="grey",fg="white")
        back_button.place(x=10, y=550)

    def register_user(self):
        name = self.suser_name_entry.get()
        email=self.semail_entry.get()
        password = self.suser_pass_entry.get()
        if name and password and email:
            conn = sqlite3.connect("RecipeUsers.db")
            cursor = conn.cursor()
            cursor.execute('SELECT email FROM users WHERE email=?', [email])
            mail=cursor.fetchone()
            cursor.execute('SELECT username FROM users where username=?',[name])
            uname=cursor.fetchone()
            if mail is not None:
                messagebox.showerror("Error", "Account already exists with this email.")
            elif uname is not None:
                messagebox.showerror("Error","Username already exists.")
            else:
                cursor.execute('INSERT INTO users VALUES (?, ?, ?)', [name, email, password])
                conn.commit()
                conn.close()
                messagebox.showinfo("Success", "Account has been created.")
                self.signup_login()
        else:
            messagebox.showerror("Error", "Enter all data.")

    def verify_login(self):
        name = self.user_name_entry.get()
        password = self.user_pass_entry.get()
        if name and password:
            conn = sqlite3.connect("RecipeUsers.db")
            cursor = conn.cursor()
            cursor.execute('SELECT * FROM users WHERE username=? AND password=?', (name, password))
            user = cursor.fetchone()
            conn.close()
            if user:
                messagebox.showinfo("Success", f"Welcome, {name}!")
                self.map()
            else:
                messagebox.showerror("Error", "Invalid username or password.")
        else:
            messagebox.showerror("Error", "Enter both username and password.")

    def map(self):
        self.label1.destroy()
        self.window.title('SELECT STATE')
        self.state = Frame(window, width  = 800, height = 600)
        self.state.place(x = 0, y = 0)
        self.image = Image.open("../assets/map.png")
        self.resize_image = self.image.resize((820,630))
        self.img = ImageTk.PhotoImage(self.resize_image)
        self.label1 = Label(image=self.img)
        self.label1.image = self.img
        self.label1.pack()
        def on_click(event):
            label_name = event.widget.cget("text")
            conn = sqlite3.connect("Recipe.db")
            cursor = conn.cursor()
            cursor.execute('SELECT stateId FROM Recipe WHERE stateName=?', [label_name])
            sid = cursor.fetchone()
            sid=sid[0]
            conn.close()
            self.content(sid)
        self.label=Label(self.window,text="Jammu and Kashmir")
        self.label.place(x=180,y=60)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Andhra Pradesh")
        self.label.place(x=300,y=400)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Tamil Nadu")
        self.label.place(x=300,y=480)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Kerala")
        self.label.place(x=250,y=480)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Karnataka")
        self.label.place(x=220,y=400)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Goa")
        self.label.place(x=190,y=380)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Telangana")
        self.label.place(x=310,y=340)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Maharashtra")
        self.label.place(x=220,y=310)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Gujarat")
        self.label.place(x=150,y=250)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Madhya Pradesh")
        self.label.place(x=270,y=250)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Odisha")
        self.label.place(x=450,y=300)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Chattisgarh")
        self.label.place(x=380,y=280)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Rajasthan")
        self.label.place(x=175,y=180)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Punjab")
        self.label.place(x=235,y=110)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Himachal Pradesh")
        self.label.place(x=280,y=90)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Haryana")
        self.label.place(x=270,y=145)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Uttarakhand")
        self.label.place(x=330,y=120)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Uttar Pradesh")
        self.label.place(x=365,y=185)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Bihar")
        self.label.place(x=480,y=200)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Jharkhand")
        self.label.place(x=460,y=235)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="West Bengal")
        self.label.place(x=523,y=245)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Sikkim")
        self.label.place(x=540,y=155)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Assam")
        self.label.place(x=642,y=183)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Meghalaya")
        self.label.place(x=605,y=208)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Arunachal Pradesh")
        self.label.place(x=675,y=135)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Tripura")
        self.label.place(x=608,y=235)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Mizoram")
        self.label.place(x=665,y=243)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Nagaland")
        self.label.place(x=700,y=186)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Manipur")
        self.label.place(x=685,y=215)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="Ladakh")
        self.label.place(x=290,y=40)
        self.label.bind("<Button - 1>",on_click)
        out_button = tk.Button(window, text="LOGOUT", font = font_lbl, command=self.signup_login,fg="white",bg="red")
        out_button.place(x=280,y=550)

    def content(self,sid):
        self.label1.destroy()
        self.window.title('SELECT TYPE')
        self.ctg = Frame(window, width  = 800, height = 600)
        self.ctg.place(x = 0, y = 0)
        self.image = Image.open("../assets/randr.jpg")
        self.resize_image = self.image.resize((800,600))
        self.img = ImageTk.PhotoImage(self.resize_image)
        self.label1 = Label(image=self.img)
        self.label1.image = self.img
        self.label1.pack()
        def on_click(event):
            label_name = event.widget.cget("text")
            if(label_name=="RECIPES LIST"):
                self.recipes(sid)
            else:
                self.recommended(sid)
        self.label=Label(self.window,text="RECIPES LIST",font = ('Courier New',15, 'bold'),bg="white",fg="black")
        self.label.place(x=75,y=200)
        self.label.bind("<Button - 1>",on_click)
        self.label=Label(self.window,text="RECOMMENDED LIST",font = ('Courier New',15, 'bold'),bg="white",fg="black")
        self.label.place(x=75,y=265)
        self.label.bind("<Button - 1>",on_click)
        back_button = tk.Button(window, text="Back",font = font_lbl, command=self.map,fg="white",bg="grey")
        back_button.place(x=90,y=350)
        out_button = tk.Button(window, text="LOGOUT", font = font_lbl, command=self.signup_login,fg="white",bg="red")
        out_button.place(x=180,y=350)

    def recipes(self,sid):
        self.label1.destroy()
        self.label.destroy()
        self.window.title('SELECT RECIPE')
        self.ctg = Frame(window, width  = 800, height = 600)
        self.ctg.place(x = 0, y = 0)
        self.image = Image.open("../Assets/recipes.jpg")
        self.resize_image = self.image.resize((800,600))
        self.img = ImageTk.PhotoImage(self.resize_image)
        self.label1 = Label(image=self.img)
        self.label1.image = self.img
        self.label1.pack()
        def on_click(event):
            label_name = event.widget.cget("text")
            conn = sqlite3.connect("Recipe.db")
            cursor = conn.cursor()
            cursor.execute('SELECT `index` FROM Recipe WHERE itemName=?', [label_name])
            iid = cursor.fetchone()
            iid=iid[0]
            conn.close()
            self.ingandpre(iid,0)
        conn = sqlite3.connect("Recipe.db")
        cursor = conn.cursor()
        cursor.execute('SELECT itemName FROM Recipe WHERE stateId = ? ', (sid,))
        items= cursor.fetchall()
        i=120
        for j in range(len(items)):
            item=items[j]
            self.label = Label(self.window, text=str(item)[2:-3],font=(10))
            self.label.place(relx=0.5,y=i,anchor=tk.CENTER)
            self.label.bind("<Button - 1>",on_click)
            i+=35
        conn.close()
        back_button = tk.Button(window, text="BACK", font=font_lbl, command=lambda: self.content(sid),bg="grey",fg="white")
        back_button.place(x=330, y=510)
        out_button = tk.Button(window, text="LOGOUT", font = font_lbl, command=self.signup_login,fg="white",bg="red")
        out_button.place(x=395,y=510)

    def recommended(self,sid):
        self.label1.destroy()
        self.window.title('SELECT RECIPE')
        self.ctg = Frame(window, width  = 800, height = 600)
        self.ctg.place(x = 0, y = 0)
        self.image = Image.open("../assets/recipes.jpg")
        self.resize_image = self.image.resize((800,600))
        self.img = ImageTk.PhotoImage(self.resize_image)
        self.label1 = Label(image=self.img)
        self.label1.image = self.img
        self.label1.pack()
        def on_click(event):
            label_name = event.widget.cget("text")
            conn = sqlite3.connect("Recipe.db")
            cursor = conn.cursor()
            cursor.execute('SELECT `index` FROM Recipe WHERE itemName=?', [label_name])
            iid = cursor.fetchone()
            iid=iid[0]
            conn.close()
            self.ingandpre(iid,1)
        conn = sqlite3.connect("Recipe.db")
        cursor = conn.cursor()
        cursor.execute('SELECT itemName FROM Recipe WHERE stateId = ? and typeId=1', (sid,))
        items= cursor.fetchall()
        i=220
        for j in range(len(items)):
            item=items[j]
            self.label = Label(self.window, text=str(item)[2:-3],font=(10))
            self.label.place(relx=0.5,y=i,anchor=tk.CENTER)
            self.label.bind("<Button - 1>",on_click)
            i+=35
        conn.close()
        back_button = tk.Button(window, text="BACK", font=font_lbl, command=lambda: self.content(sid),bg="grey",fg="white")
        back_button.place(x=330, y=510)
        out_button = tk.Button(window, text="LOGOUT", font = font_lbl, command=self.signup_login,fg="white",bg="red")
        out_button.place(x=395,y=510)

    def ingandpre(self,iid,id):
        self.label1.destroy()
        self.window.title('INGREDIENTS AND PREPARATION')
        self.ctg = Frame(window, width  = 800, height = 600)
        self.ctg.place(x = 0, y = 0)
        self.image = Image.open("../assets/preparation.jpg")
        self.resize_image = self.image.resize((800, 600))
        self.img = ImageTk.PhotoImage(self.resize_image)
        self.label1 = Label(image=self.img)
        self.label1.image = self.img
        self.label1.pack()
        self.ing_lbl = Label(window, text='INGREDIENTS', font=font_lbl, bg='steel blue', fg='white')
        self.ing_lbl.place(x=103, y=150)
        self.prep_lbl = Label(window, text='PREPARATION', font=font_lbl, bg='steel blue', fg='white')
        self.prep_lbl.place(x=450, y=150)
        conn = sqlite3.connect("Recipe.db")
        cursor = conn.cursor()
        cursor.execute('SELECT itemName FROM Recipe WHERE `index` = ?', [iid])
        item= cursor.fetchone()
        conn.close()
        self.ing_lbl = Label(window, text=str(item)[2:-3], font=(25), bg='white', fg='black')
        self.ing_lbl.place(x=250,y=50)
        conn = sqlite3.connect("Recipe.db")
        cursor = conn.cursor()
        cursor.execute('SELECT ingredients FROM Recipe WHERE `index` = ?', [iid])
        ingrediants= cursor.fetchone()
        conn.close()
        message1 = tk.Message(window, text=str(ingrediants)[2:-3], width=320)
        message1.pack()
        message1.place(x=10, y=180)
        conn = sqlite3.connect("Recipe.db")
        cursor = conn.cursor()
        cursor.execute('SELECT preparation FROM Recipe WHERE `index` = ?', [iid])
        preparation= cursor.fetchone()
        conn.close()
        message2 = tk.Message(window, text=str(preparation)[2:-3], width=320)
        message2.pack()
        message2.place(x=350, y=180)
        conn = sqlite3.connect("Recipe.db")
        cursor = conn.cursor()
        cursor.execute('SELECT stateId FROM Recipe WHERE `index` = ?', [iid])
        sid= cursor.fetchone()
        sid=sid[0]
        conn.close()
        if(id==1):
            back_button = tk.Button(window, text="BACK", font=font_lbl, command=lambda:self.recommended(sid),bg="grey",fg="white")
            back_button.place(x=100, y=550)
        else:
            back_button = tk.Button(window, text="BACK", font=font_lbl, command=lambda: self.recipes(sid),bg="grey",fg="white")
            back_button.place(x=100, y=550)
        out_button = tk.Button(window, text="LOGOUT", font = font_lbl, command=self.signup_login,fg="white",bg="red")
        out_button.place(x=170,y=550)

home = Home(window)
window.mainloop()